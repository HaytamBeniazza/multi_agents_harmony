# AI Agents System - Development Dockerfile
FROM python:3.8-slim

# Set working directory
WORKDIR /app

# Set environment variables for development
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    DEBIAN_FRONTEND=noninteractive \
    PYTHONPATH=/app \
    FLASK_ENV=development \
    FLASK_DEBUG=True

# Install system dependencies including Chrome for web scraping
RUN apt-get update && apt-get install -y \
    gcc \
    g++ \
    curl \
    wget \
    gnupg \
    unzip \
    git \
    vim \
    && rm -rf /var/lib/apt/lists/*

# Install Chrome for Selenium (if needed)
RUN wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - \
    && echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google.list \
    && apt-get update \
    && apt-get install -y google-chrome-stable \
    && rm -rf /var/lib/apt/lists/*

# Copy requirements files
COPY requirements/ requirements/

# Install Python dependencies with development tools
RUN pip install --no-cache-dir --upgrade pip && \
    pip install --no-cache-dir -r requirements/development.txt

# Copy application code
COPY . .

# Create directories for logs and data
RUN mkdir -p /app/logs /app/data /app/exports

# Copy and setup startup script (before switching users)
COPY scripts/docker-start.sh /app/start.sh
RUN chmod +x /app/start.sh

# Create non-root user for security
RUN useradd --create-home --shell /bin/bash --uid 1000 ai_user && \
    chown -R ai_user:ai_user /app
USER ai_user

# Expose ports
EXPOSE 5000 8888

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:5000/api/system_metrics || exit 1

# Default command
CMD ["./start.sh", "web"] 